name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/bun.lock" ]; then
            echo "manager=bun" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=bun" >> $GITHUB_ENV
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=ci" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
          else
            echo "No supported package manager found"
            exit 1
          fi

      - name: Setup Bun (if detected)
        if: env.manager == 'bun'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node (if using npm)
        if: env.manager == 'npm'
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/bun.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/bun.lock') }}-

      - name: Install dependencies
        run: ${{ env.manager }} ${{ env.command }}

      - name: Build with Next.js
        run: ${{ env.runner }} next build
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          CONTACT_TO_EMAIL: ${{ secrets.CONTACT_TO_EMAIL }}
          NEXT_PUBLIC_BASE_PATH: ${{ vars.NEXT_PUBLIC_BASE_PATH }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4